<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://www.valondress.com/DataOperation">
  
  <!--获取所有角色-->
  <dataCommand name="RoleRight_GetRoles" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[
        IF LEN(@Status)>0
        BEGIN
        SELECT [RoleID]
          ,[RoleName]
          ,[Remark]
          ,[Status]
      FROM [dbo].[T_Role] AS A WITH(NOLOCK)
      WHERE A.[Status]= @Status
      END ELSE BEGIN
         SELECT [RoleID]
          ,[RoleName]
          ,[Remark]
          ,[Status]
      FROM [dbo].[T_Role] AS A WITH(NOLOCK)
      
      END
			]]>
    </commandText>
    <parameters>
      <param name="@Status" dbType="String" />
    </parameters>
  </dataCommand>
  <!--设置角色-->
  <dataCommand name="RoleRight_SetRole" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[

      IF @RoleID = 0
        BEGIN
            INSERT INTO [dbo].[T_Role]
           ([RoleName]
           ,[Remark]
           ,[Status])
             VALUES
           (@RoleName
           ,@Remark
           ,'A')
        END ELSE BEGIN
          UPDATE [dbo].[T_Role]
             SET [RoleName] = @RoleName
                ,[Remark] = @Remark
                ,[Status] = @Status
           WHERE [RoleID] =@RoleID
        END
			]]>
    </commandText>
    <parameters>
      <param name="@RoleID" dbType="Int32" />
      <param name="@RoleName" dbType="String" />
      <param name="@Remark" dbType="String" />
      <param name="@Status" dbType="String" />
    </parameters>
  </dataCommand>
  <!--获取页面扩展权限-->
  <dataCommand name="RoleRight_SetRoleMenuExtend" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[

      IF @RoleID>0
        BEGIN
            INSERT INTO [dbo].[T_Role]
           ([RoleName]
           ,[Remark]
           ,[Status])
             VALUES
           (@RoleName
           ,@Remark
           ,'A')
        END ELSE BEGIN
          UPDATE [dbo].[T_Role]
             SET [RoleName] = @RoleName
                ,[Remark] = @Remark
                ,[Status] = @Status
           WHERE [RoleID] =@RoleID
        END
			]]>
    </commandText>
    <parameters>
      <param name="@RoleID" dbType="Int32" />
      <param name="@RoleName" dbType="String" />
      <param name="@Remark" dbType="String" />
      <param name="@Status" dbType="String" />
    </parameters>
  </dataCommand>
  <!--获取所有角色页面扩展权限，缓存-->
  <dataCommand name="RoleRight_GetRoleMenuExtends" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT A.[ExtendID]
            ,A.[MID]
            ,A.[RightKey]
	          ,B.[RoleID]
		       	,C.[Url]
        FROM [dbo].[T_MenuExtent] AS A WITH(NOLOCK)
        LEFT JOIN [dbo].[T_RoleMenuExtent_Mapping] AS B WITH(NOLOCK)  ON A.ExtendID=B.ExtendID
		    LEFT JOIN [dbo].[T_Menu] AS C WITH(NOLOCK) ON A.MID=C.MID
        WHERE A.Status='A'
			]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>
  <!--获取所有角色权限树，缓存-->
  <dataCommand name="RoleRight_GetRoleMenus" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[

       SELECT 
	           A.[RoleID]
            ,A.[MID]
	          ,B.[MName]
            ,B.[MDesc]
            ,B.[MIcon]
            ,B.[MType]
            ,B.[Url]
            ,B.[IsShow]
            ,B.[PID]
            ,B.[Levels]
        FROM		
        [dbo].[T_RoleMenu_Mapping] AS A WITH(NOLOCK)
        LEFT JOIN [dbo].[T_Menu] AS B WITH(NOLOCK) ON A.MID=B.MID
        ORDER BY B.[Levels],B.[SortNo]
			]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>
  <!--获取所有角色权限树-->
  <dataCommand name="RoleRight_GetUserRoleRightList" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[

      SELECT A.[MID]
      FROM [dbo].[T_RoleMenu_Mapping] AS A WITH(NOLOCK) 
      LEFT JOIN [dbo].[T_Menu] AS B WITH(NOLOCK) ON A.MID=B.MID
      WHERE B.MType=2 AND A.RoleID = @RoleID
        UNION
      SELECT A.[ExtendID] AS [MID]
      FROM [dbo].[T_RoleMenuExtent_Mapping] AS A WITH(NOLOCK) WHERE A.RoleID = @RoleID
			]]>
    </commandText>
    <parameters>
      <param name="@RoleID" dbType="Int32" />
    </parameters>
  </dataCommand>
  <!--设置角色权限-->
  <dataCommand name="RoleRight_SetUserRoleRight" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[

        SET XACT_ABORT on
            BEGIN TRAN
              DELETE FROM  [dbo].[T_RoleMenu_Mapping] WHERE RoleID=@RoleID
              DELETE FROM  [dbo].[T_RoleMenuExtent_Mapping] WHERE RoleID=@RoleID
              
            @RoleMenu_Mapping
                   
            @RoleMenuExtent_Mapping
            
            COMMIT TRAN
			]]>
    </commandText>
    <parameters>
      <param name="@RoleID" dbType="Int32" />
    </parameters>
  </dataCommand>
  <!--获取权限-->
  <dataCommand name="RoleRight_GetMenus" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[

            SELECT [MID]
            ,[MName]
            ,[MIcon]
            ,[MType]
            ,[IsShow]
            ,[PID]
            ,[Levels],[IsShow]
        FROM [dbo].[T_Menu] AS A WITH(NOLOCK)
        ORDER BY A.[SortNo]
        
        SELECT [ExtendID]
      ,[ExtendName]
      ,[MID]
      ,[RightKey]
        FROM [dbo].[T_MenuExtent] AS A WITH(NOLOCK)
        WHERE A.[Status] = 'A'
  
			]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>
  <!--获取登录用户信息-->
  <dataCommand name="RoleRight_GetUserRoles" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[
        DECLARE @SelectSql NVARCHAR(4000)
        DECLARE @CountSql NVARCHAR(4000)
        DECLARE @WhereSql NVARCHAR(2000)
	      --设置排序条件
        IF @SortField IS NULL OR LEN(@SortField)=0
		      BEGIN
			      SET @SortField = N'A.[UserID]' 
			      SET @SortType = N'DESC' 
		      END
        --设置查询条件
        SET @WhereSql=N' WHERE (1=1) '
        
        IF @UserRoleID > 0 
          SET @WhereSql+=N' AND A.[UserRoleID] = @UserRoleID '
          
        IF LEN(@Account) > 1 
          SET @WhereSql+=N' AND A.[Account] like @Account '
        
       
          
        SET @SelectSql=N'
            SELECT TOP(@PageSize)
                           TT.RowId
					                ,TT.[UserID]
                          ,TT.[Account]
                          ,TT.[Email]
                          ,TT.[UserRoleID]
                          ,TT.[QQAccount]
                          ,TT.[WechatAccount]
	                        ,TT.[Face]
	                        ,TT.[Name]
	                        ,TT.[CustomerType]
          FROM(SELECT ROW_NUMBER() OVER(ORDER BY '+ @SortField +' '+ @SortType +') AS RowId
                            ,A.[UserID]
                            ,A.[Account]
                            ,A.[Email]
                            ,A.[UserRoleID]
                            ,A.[QQAccount]
                            ,A.[WechatAccount]
	                          ,B.[Face]
	                          ,B.[Name]
	                          ,B.[CustomerType]
                      FROM [dbo].[T_Login] AS A WITH(NOLOCK)
                      LEFT JOIN [dbo].[T_Customer] AS B WITH(NOLOCK) ON A.UserID=B.UserID'
                      + @WhereSql+ N') TT WHERE TT.RowId > @PageSize * @PageCurrent'
        
        SET @CountSql = N'SELECT @TotalCount=COUNT(1)  FROM [dbo].[T_Customer] AS A WITH(NOLOCK) '+@WhereSql
        
        EXEC sp_executesql @SelectSql,
              N'@UserRoleID INT,@Account NVARCHAR(50),
                @SortType NVARCHAR(50),
		            @SortField NVARCHAR(50),
		            @PageSize INT,
		            @PageCurrent INT',
                
                @UserRoleID,@Account,
		            @SortType,
		            @SortField,
		            @PageSize,
		            @PageCurrent
        EXEC sp_executesql @CountSql,
              N'@UserRoleID INT,@Account NVARCHAR(50),
                TotalCount INT OUTPUT',
                
                @UserRoleID,@Account,
                @TotalCount OUTPUT
			]]>
    </commandText>
    <parameters>
      <param name="@UserRoleID" dbType="Int32" />
      <param name="@Account" dbType="String" />

      <param name="@SortType" dbType="String" />
      <param name="@SortField" dbType="String"/>
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32"/>
      <param name="@TotalCount" dbType="Int32" direction="Output"/>
    </parameters>
  </dataCommand>
  <!--更新用户角色-->
  <dataCommand name="RoleRight_UpdateUserRoles" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[
          UPDATE  [dbo].[T_Login] SET [UserRoleID] = @UserRoleID WHERE [UserID] = @UserID
			]]>
    </commandText>
    <parameters>
      <param name="@UserRoleID" dbType="Int32" />
      <param name="@UserID" dbType="Int32" />
    </parameters>
  </dataCommand>
  <!--设置用户密码-->
  <dataCommand name="RoleRight_SetCustomerPwd" database="lawyers" commandType="Text">
    <commandText>
      <![CDATA[
        
           UPDATE [dbo].[T_Login] SET [Password] = @Password WHERE [UserID] = @UserID
			]]>
    </commandText>
    <parameters>
      <param name="@Password" dbType="String" />
      <param name="@UserID" dbType="Int32" />
    </parameters>
  </dataCommand>
</dataOperations>